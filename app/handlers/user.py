from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from db.database import get_db
import os

router = Router()
ADMINS = [int(x) for x in os.getenv("ADMINS", "").split(",") if x.strip()]


@router.message(Command("registration"))
async def handle_registration(message: Message):
    parts = message.text.strip().split(maxsplit=3)

    if len(parts) != 4:
        await message.answer("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç:\n/registration –ò–º—è –§–∞–º–∏–ª–∏—è handle")
        return

    _, first_name, last_name, handle = parts
    telegram_id = message.from_user.id

    with get_db() as conn:
        cursor = conn.cursor()

        # –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º handle
        cursor.execute("SELECT telegram_id FROM users WHERE handle = ?", (handle,))
        row = cursor.fetchone()

        if not row:
            await message.answer("‚ùå –≠—Ç–æ—Ç handle –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ—Å–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–æ–±–∞–≤–∏—Ç—å –≤–∞—Å.")
            return

        existing_telegram_id = row[0]

        if existing_telegram_id:
            if existing_telegram_id == telegram_id:
                await message.answer("‚úÖ –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.")
            else:
                await message.answer("‚ùå –≠—Ç–æ—Ç handle —É–∂–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –¥—Ä—É–≥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.")
            return

    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞—è–≤–∫—É –≤—Å–µ–º –∞–¥–º–∏–Ω–∞–º
    for admin_id in ADMINS:
        kb = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚úÖ –ü—Ä–∏–Ω—è—Ç—å", callback_data=f"approve:{telegram_id}:{handle}")]
        ])
        await message.bot.send_message(
            admin_id,
            text=(
                f"üì• –ó–∞—è–≤–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é:\n"
                f"<b>{last_name} {first_name}</b>\n"
                f"Handle: <code>{handle}</code>\n"
                f"<a href='tg://user?id={telegram_id}'>–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å</a>"
            ),
            reply_markup=kb,
            parse_mode="HTML"
        )

    await message.answer("üì® –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º. –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.")


@router.message(Command("update_handle_request"))
async def update_handle_request(message: Message):
    telegram_id = message.from_user.id
    args = message.text.strip().split()

    if len(args) != 2:
        await message.answer("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /update_handle_request <–Ω–æ–≤—ã–π_handle>")
        return

    new_handle = args[1]

    with get_db() as conn:
        cursor = conn.cursor()
        cursor.execute("""
            SELECT handle, first_name, last_name FROM users WHERE telegram_id = ?
        """, (telegram_id,))
        row = cursor.fetchone()

    if not row:
        await message.answer("‚ùå –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.")
        return

    old_handle, first_name, last_name = row

    for admin_id in ADMINS:
        kb = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(
                text="‚úÖ –ü—Ä–∏–Ω—è—Ç—å",
                callback_data=f"confirm_handle_update:{telegram_id}:{new_handle}"
            )]
        ])
        await message.bot.send_message(
            admin_id,
            text=(
                f"üì§ –ó–∞–ø—Ä–æ—Å –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ handle:\n"
                f"<b>{last_name} {first_name}</b>\n"
                f"–°—Ç–∞—Ä—ã–π: <code>{old_handle}</code>\n"
                f"–ù–æ–≤—ã–π: <a href='https://codeforces.com/profile/{new_handle}'>{new_handle}</a>"
            ),
            reply_markup=kb,
            parse_mode="HTML"
        )

    await message.answer("üì® –ó–∞–ø—Ä–æ—Å –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ handle –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")

